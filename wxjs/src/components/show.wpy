<style lang="less" scoped>
.input-wrap {
  display: flex;
  flex-direction: row;
  align-items:center;//定义在交叉轴的对齐方式
  justify-content: flex-start;//定义在主轴的对齐方式
  width: 100%;
  height: 100rpx;
  border-bottom:0.1rpx solid #f5f5f5;
 position:relative;
flex-flow:row nowrap;
line-height:1.4;
box-sizing:border-box;
font-size:28rpx;
color:#333;
  padding: 24rpx 30rpx;
  margin-top: 10rpx;
}

 

.tips {
  display: flex;
  position: absolute;
  top: 50%;
  right: 0;
  font-size: 0;
  transform: translate(0, -50%);
  -webkit-transform: -webkit-translate(0, -50%);
  z-index: 100;

}
.warn-tip {
  line-height: 104rpx;
  font-size: 28rpx;
  color: #ff5777;
}
.icon{
    width: 40rpx;
  height: 40rpx;
  line-height: 36rpx;
  margin-right: 32rpx;
  color: #999
}
.tip-value{
  font-size: 28rpx;
}

.value{
  font-size: 30rpx;
  color: #666
}
.placeholder{
  font-size: 28rpx;
  color:#c7c7cd;
}
</style>
<template>
  <view class="input-wrap" >
    <icon class="icon" :type="icon" size="40"></icon>
    <text class="{{valueStyle}}">{{value.length==0?placeholder:value}}</text>
    <view class="tips">
      <text wx:if="{{tip}}" class="warn-tip">{{tipValue}}</text>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import Icon from './icon'
import Input from './input'
import InterfaceUtils from '../js/InterfaceUtils.js'

export default class ComInput extends wepy.component {
    props = {
      type: {
        type: [Number, String],
        default: "mobile"
      },
      value:{
         type: [Number, String],
        default: "",
        twoWay:true
      },
      tipValue:{
        type: [String],
        default: "请输入正确的格式"
      },
      placeholder:{
        type: [Number,String],
        default: ""
      },
      icon:{
        type:[String],
        default:"shouji"
      },
      confirmType:{
        type:[String],
        default:"done"
      },
      validity:{
       type: [Boolean],
        default: false,
        twoWay:true
      },
      allowEmpty:{
        type: [Boolean],
        default: true,
        twoWay:false
      },
      maxlength:{
        type:[Number,String],
        default:100
      }
    }
    components = {
      icon: Icon,
      xinput: Input,
    }
    data = {
      tip: true,
  
    }
    events = {

    }

    computed={
      inputType:function(){
         if(this.type === "qq"||this.type === "mobile"){
          return "number"
         }else if(this.type === "idcard"){
          return "idcard"
         }else{
          return "text"
         } 
      },
      valueStyle:function(){
        if(this.value.length === 0){
           return "placeholder"
        }

        return "value"
       
      }
    }

    watch = {

    }

   onLoad() {
   

  }
    methods = {
      tap(){

      }
    }

 

  } 
  </script>