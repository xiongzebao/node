<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'
import  appConfig from './js/config.js'
import  request from './js/NetUtils.js'
import InterfaceUtils from './js/InterfaceUtils.js'
import api from './js/url.js'
const store = configStore()
setStore(store)




export default class extends wepy.app {
  config = {
    pages: [
    'pages/sign/sign', 
    'pages/sign/submit',
    "pages/stat/stat",
    "pages/index/index"
    ],
    "tabBar": {
      color:"#333333", 
      selectedColor:"#ff0000",
      backgroundColor:"#f6f6f6",
      "list": [{
        "pagePath": "pages/sign/sign",
        "text": "签到",
        "iconPath":"./asset/sign.png",
        "selectedIconPath":"./asset/sign_sel.png"
      }, {
        "pagePath": "pages/stat/stat",
        "text": "统计",
        "iconPath":"./asset/stat.png",
        "selectedIconPath":"./asset/stat_sel.png"
      }]
    },
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    }
  }

  data={
    color:"#ffff00"
  }
  
  globalData = {
    userInfo: null,
    appConfig:appConfig,
  }

  compute={
    getAppConfig(){
      //////console.log(appConfig);
      return appConfig;
    }
  }
  constructor () {
    super()
    this.use('requestfix')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
  //  const data = await this.sleep(30)
  this.sleep(10).then((data)=>{
    //////console.log(data);
  });

  }

  getUserInfo(cb) {
    const that = this
    //////console.log("fsdfsdfs")
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
     //////console.log("fsfdsfsdfdsfdsgdg")
    wx.getUserInfo({
      success(res) {
        //////console.log("获取头像")
        //////console.log(res);
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })

    wx.getSetting({
      success:function(res){
          //////console.log(res)
      }
    })

    wx.login({
      success:function(res){
        //////console.log(res);
      }
    })
  }

 //全局的get方法
  get(){

  }
  //全局的post方法
  post(url, data, cb,showLoading=false) {
    let callback = (res) => {
      if (res.statusCode != 200) {
        InterfaceUtils.showToast("系统繁忙，请稍后再试")
        return;
      }
      cb && cb(res.data);
    }
    request.post(this.globalData.appConfig.server.host + url, data);
  }

  onError(e){ 
    InterfaceUtils.showToast("操作失败");
    let data={
      errorInfo:e,
      errorType:1,
      errorCode:500
    }
    request.post(api.ApiError,data);
  }



}
</script>
